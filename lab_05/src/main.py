from cogs import *
from out import print_result
from scipy.integrate import dblquad
from scipy.optimize import fsolve
from numpy import iinfo
import numpy as np
from sys import float_info

n = 9
m = 9
phi_func = simpson
theta_func = gauss
tau = 1
#func = generate_function(tau)
func = lambda theta, phi: theta*theta + theta*phi + phi*phi
h = lambda x: x*x
g = lambda x: -x*x + 2

x1, x2 = fsolve(lambda x: h(x) - g(x), (-1000, 1000))
ans = integrate(func, phi_func, theta_func, (lambda x: x1, lambda x: x2), (h, g), n, m)

#print("–§—É–Ω–∫—Ü–∏—è f(Œ∏, œÜ) = Œ∏^2 + Œ∏œÜ + œÜ^2, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –∫—Ä–∏–≤—ã–º–∏ Œ∏^2 –∏ -Œ∏^2 + 2")
print("–§—É–Ω–∫—Ü–∏—è f(Œ∏, œÜ) = sh(Œ∏ - œÜ^2) * exp(Œ∏œÜ), –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –∫—Ä–∏–≤—ã–º–∏ Œ∏^2 –∏ -Œ∏^2 + 2")
print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ N(œÜ) = {:^2}".format(n))
print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ M(Œ∏) = {:^2}".format(m))
print("–ú–µ—Ç–æ–¥ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ œÜ - –ì–∞—É—Å—Å")
print("–ú–µ—Ç–æ–¥ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ Œ∏ - –°–∏–º–ø—Å–æ–Ω")
print("–ó–Ω–∞—á–µ–Ω–∏–µ ùúè = {:^3}".format(tau))
print("–†–µ–∑—É–ª—å—Ç–∞—Ç = {:^3}".format(ans))
answ = dblquad(func, -1, 1, lambda x: x*x, lambda x: -x*x + 2)
print(answ)
#print_result((n, m))